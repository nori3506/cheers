rules_version = '2';

// service cloud.firestore {
//   match /databases/{database}/documents {
//     match /{document=**} {
//     	allow read: if request.auth.uid != null;
// 			allow write: if request.auth != null;
//     }
//   }
// }

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userID) {
      return request.auth.uid == userID;
    }

    match /reviews/{reviewID} {
    	allow read: if isAuthenticated();
    	allow create, update: if (
        isAuthenticated() &&
      	request.resource.data.drink_name is string &&
      	request.resource.data.drink_category is string &&
      	request.resource.data.comment is string &&
      	request.resource.data.shop_category is string &&
      	request.resource.data.price is number &&
      	request.resource.data.rating is number &&
      	request.resource.data.rating >= 1 &&
      	request.resource.data.rating <= 5
      );
      allow delete: if isAuthenticated();
    }
    
    match /shops/{shopID} {
    	allow read: if isAuthenticated();
    	allow create, update: if (
        isAuthenticated() &&
      	request.resource.data.name is string
      );
      allow delete: if isAuthenticated();
    }
    
    match /users/{userID} {
      allow read: if isAuthenticated();
      allow create, update: if (
        isUserAuthenticated(userID) && 
      	request.resource.data.name is string
      );
      allow delete: if isUserAuthenticated(userID);
    }
  }
}